<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Expertise extends Model
{
    protected $table ='expertises';
    protected $fillable = [
       'char_id',
       'abrirT', 
       'abrirG', 
       'abrirO', 
       'abrirK', 
       'acrobT', 
       'acrobG', 
       'acrobO', 
       'acrobK', 
       'adesT', 
       'adesG', 
       'adesO', 
       'adesK', 
       'arteT', 
       'arteG', 
       'arteO', 
       'arteK', 
       'atuaT', 
       'atuaG', 
       'atuaO', 
       'atuaK', 
       'atuaT1', 
       'atuaG1', 
       'atuaO1', 
       'atuaK1', 
       'atuaT2', 
       'atuaG2', 
       'atuaO2', 
       'atuaK2', 
       'avaliaT', 
       'avaliaG', 
       'avaliaO', 
       'avaliaK', 
       'blefaT', 
       'blefaG', 
       'blefaO', 
       'blefaK', 
       'cavalgaT', 
       'cavalgaG', 
       'cavalgaO', 
       'cavalgaK', 
       'concentraT', 
       'concentraG', 
       'concentraO', 
       'concentraK', 
       'conheceT', 
       'conheceG', 
       'conheceO', 
       'conheceK', 
       'conheceT1', 
       'conheceG1', 
       'conheceO1', 
       'conheceK1', 
       'conheceT2', 
       'conheceG2', 
       'conheceO2', 
       'conheceK2', 
       'curaT', 
       'curaG', 
       'curaO', 
       'curaK', 
       'decifraT', 
       'decifraG', 
       'decifraO', 
       'decifraK', 
       'diplomaT', 
       'diplomaG', 
       'diplomaO', 
       'diplomaK', 
       'disfarceT', 
       'disfarceG', 
       'disfarceO', 
       'disfarceK', 
       'equilT', 
       'equilG', 
       'equilO', 
       'equilK', 
       'escalaT', 
       'escalaG', 
       'escalaO', 
       'escalaK', 
       'escondeT', 
       'escondeG', 
       'escondeO', 
       'escondeK', 
       'fasificaT', 
       'falsificaG', 
       'falsificaO', 
       'falsificaK', 
       'furtivoT', 
       'furtivoG', 
       'furtivoO', 
       'furtivoK', 
       'idenT', 
       'idenG', 
       'idenO', 
       'idenK', 
       'intimidaT', 
       'intimidaG', 
       'intimidaO', 
       'intimidaK', 
       'nadaT', 
       'nadaG', 
       'nadaO', 
       'nadaK', 
       'observaT', 
       'observaG', 
       'observaO', 
       'observaK', 
       'obterT', 
       'obterG', 
       'obterO', 
       'obterK', 
       'oficioT', 
       'oficioG', 
       'oficioO', 
       'oficioK', 
       'operarT', 
       'operarG', 
       'operarO', 
       'operarK', 
       'ouvirT', 
       'ouvirG', 
       'ouvirO', 
       'ouvirK', 
       'procuraT', 
       'procuraG', 
       'procuraO', 
       'procuraK', 
       'profissaoT', 
       'profissaoG', 
       'profissaoO', 
       'profissaoK', 
       'prestT', 
       'prestG', 
       'prestO', 
       'prestK', 
       'saltarT', 
       'saltarG', 
       'saltarO', 
       'saltarK', 
       'sentirT', 
       'sentirG', 
       'sentirO', 
       'sentirK', 
       'sobreT', 
       'sobreG', 
       'sobreO', 
       'sobreK', 
       'usacordaT', 
       'usacordaG', 
       'usacordaO', 
       'usacordaK', 
       'usarmagicoT', 
       'usarmagicoG', 
       'usarmagicoO', 
       'usarmagicoK', 
       'otherT', 
       'otherG', 
       'otherO', 
       'otherK', 
       'otherT1', 
       'otherG1', 
       'otherO1', 
       'otherK1', 
       'otherT2', 
       'otherG2', 
       'otherO2', 
       'otherK2'
    ];
    use HasFactory;

    public function relChar()
    {
        return $this->hasOne('App\Models\Char', 'id', 'char_id');

    }
}
